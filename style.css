/* ===== Base & Theme ===== */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap");

:root {
  /* base palette (light) */
  --primary-color: #fff;
  --primary-color-2: rgb(250, 250, 250);
  --primary-color-3: rgb(181, 181, 181);
  --background-color: #fff;
  --secondary-color: #000;
  --secondary-color-2: rgb(85, 85, 85);
  --button-background: rgb(53, 53, 53);
  --button-text-hover: grey;
  --button-border: rgb(53, 53, 53) 0.1rem solid;
  --button-border-2: #fff 0.1rem solid;
  --container-border: rgb(163, 163, 163);

  /* bright UI vars */
  --card-bg: #0f172a;
  --card-border: #334155;
  --ink: #e6f0ff;
  --muted: #a8b3c7;
  --pill-bg: rgba(99, 102, 241, .18);
  --pill-text: #eaf0ff;
  --btn-bg: #111827;

  /* activity ring colors */

  --ring-move: #ff2d55;
  /* Move (red/pink) */
  --ring-exercise: #34c759;
  /* Exercise (green) */
  --ring-stand: #5ac8fa;
  /* Stand (blue) */
  --ring-track: #e5e7eb;
  /* track (light) */
}

[theme="dark"] {
  --primary-color: #000;
  --primary-color-2: rgb(39, 39, 39);
  --primary-color-3: rgb(74, 74, 74);
  --background-color: rgb(33, 33, 33);
  --secondary-color: #fff;
  --secondary-color-2: rgb(170, 170, 170);
  --button-background: rgb(202, 202, 202);
  --button-text-hover: lightgrey;
  --button-border: rgb(202, 202, 202) 0.1rem solid;
  --button-border-2: #000 0.1rem solid;
  --container-border: rgb(92, 92, 92);

  /* bright UI in dark */
  --card-bg: #0f172a;
  --card-border: #334155;
  --ink: #e6f0ff;
  --muted: #a8b3c7;
  --pill-bg: rgba(99, 102, 241, .18);
  --pill-text: #eaf0ff;
  --btn-bg: #111827;

  /* ring track for dark */
  --ring-track: #1f2937;
}

/* ===== Reset & Base Typography ===== */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Poppins", sans-serif;
  background-color: var(--background-color);
}

html {
  scroll-behavior: smooth;
}

p {
  color: var(--secondary-color-2);
}

h3 {
  color: var(--secondary-color);
}

a,
.btn {
  transition: all 300ms ease;
}

.icon {
  cursor: pointer;
  height: 2rem;
}

/* ===== Navs ===== */
nav,
.nav-links {
  display: flex;
  align-items: center;
}

nav {
  justify-content: space-around;
  height: 17vh;
}

.nav-links {
  gap: 2rem;
  list-style: none;
  font-size: 1.5rem;
}

nav li:last-child {
  width: max-content;
  display: flex;
  margin: auto;
  padding: 10px;
}

a {
  color: var(--secondary-color);
  text-decoration: none;
  text-decoration-color: var(--primary-color);
}

a:hover {
  text-decoration: underline;
  text-underline-offset: 1rem;
  text-decoration-color: var(--secondary-color);
}

nav a:hover {
  color: var(--secondary-color);
}

.logo {
  font-size: 2rem;
  color: var(--secondary-color);
}

.logo:hover {
  cursor: default;
}

#hamburger-nav {
  display: none;
}

.hamburger-menu {
  position: relative;
  display: inline-block;
}

.hamburger-icon {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 24px;
  width: 30px;
  cursor: pointer;
}

.hamburger-icon span {
  width: 100%;
  height: 2px;
  background-color: var(--secondary-color);
  transition: all 0.3s ease-in-out;
}

.menu-links {
  position: absolute;
  top: 100%;
  right: 0;
  background-color: var(--primary-color);
  width: fit-content;
  max-height: 0;
  overflow: hidden;
  transition: all 0.3s ease-in-out;
}

.menu-links a {
  display: block;
  padding: 10px;
  text-align: center;
  font-size: 1.5rem;
  color: var(--secondary-color);
}

.menu-links li {
  list-style: none;
}

.menu-links.open {
  max-height: 300px;
}

.hamburger-icon.open span:first-child {
  transform: rotate(45deg) translate(10px, 5px);
}

.hamburger-icon.open span:nth-child(2) {
  opacity: 0;
}

.hamburger-icon.open span:last-child {
  transform: rotate(-45deg) translate(10px, -5px);
}

/* ===== Sections ===== */
section {
  padding-top: 4vh;
  margin: 0 10rem;
  min-height: fit-content;
  height: auto;
}

.section-container {
  display: flex;
}

.title {
  color: var(--secondary-color);
  font-size: 3rem;
  text-align: center;
}

/* ===== Profile ===== */
#profile {
  display: flex;
  justify-content: center;
  gap: 5rem;
  height: 80vh;
}

.section__pic-container {
  display: flex;
  height: 400px;
  width: 400px;
  margin: auto 0;
}

.section__text {
  align-self: center;
  text-align: center;
}

.section__text p {
  font-weight: 600;
}

.section__text__p1 {
  text-align: center;
}

.section__text__p2 {
  font-size: 1.75rem;
  margin-bottom: 1rem;
}

#socials-container {
  display: flex;
  justify-content: center;
  margin-top: 1rem;
  gap: 1rem;
}

/* ===== Buttons ===== */
.btn-container {
  display: flex;
  justify-content: center;
  gap: 1rem;
}

.btn {
  font-weight: 600;
  padding: 1rem;
  width: 8rem;
  border-radius: 2rem;
}

.btn-color-1,
.btn-color-2 {
  border: var(--button-border);
  color: var(--secondary-color-2);
}

.btn-color-1:hover,
.btn-color-2:hover {
  cursor: pointer;
}

.btn-color-1,
.btn-color-2:hover {
  background: var(--button-background);
  color: var(--primary-color);
}

.btn-color-1:hover {
  background: var(--secondary-color);
}

.btn-color-2 {
  background: none;
}

.btn-color-2:hover {
  border: var(--button-border);
  background: var(--secondary-color);
}

/* ===== About ===== */
#about {
  position: relative;
}

.about-containers {
  display: flex;
  gap: 2rem;
  margin: 2rem 0;
}

.about-details-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.details-container {
  padding: 1.5rem;
  flex: 1;
  background: var(--primary-color-2);
  border-radius: 2rem;
  border: var(--button-border);
  border-color: var(--container-border);
  text-align: center;
}

.arrow {
  position: absolute;
  right: -5rem;
  bottom: 2.5rem;
}

/* ==== SKILLS SECTION (mirrors your about styles) ==== */

/* If your section id is #experience (your current markup), keep this.
   If you switch to #skills, just replace #experience with #skills below. */
#experience {
  position: relative;
}

/* Outer grid/row that holds your skills content */
.skills-containers {
  display: flex;
  flex-wrap: wrap;
  /* lets items wrap on small screens */
  gap: 2rem;
  margin: 2rem 0;
}

/* Column wrapper for text + lists + rings inside the skills section */
.skills-details-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex: 1 1 100%;
}

/* Individual skills panel (like your old .details-container) */
.skill-container {
  padding: 1.5rem;
  flex: 1 1 360px;
  /* grows, but won’t get too tiny */
  background: var(--primary-color-2);
  border-radius: 2rem;
  border: var(--button-border);
  border-color: var(--container-border);
  text-align: center;
}

/* Make inner grids (rings/meters/tags) expand and fill nicely */
.skill-container .activity-grid,
.skill-container .skills-card-grid,
.skill-container .skill-columns {
  display: grid;
  gap: 16px;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  margin-top: 12px;
}

/* Headings/labels inside panels */
.skill-container h3,
.skill-container h4 {
  margin-bottom: .5rem;
  color: var(--secondary-color);
  font-weight: 600;
}

.skill-container .muted {
  color: var(--muted, #a8b3c7);
  font-size: 14px;
}

/* Optional: a “vibrant” modifier for light mode pop (keep dark as-is) */
.skill-container.vibrant {
  border: 1.5px solid transparent;
  background:
    linear-gradient(var(--primary-color-2), var(--primary-color-2)) padding-box,
    linear-gradient(135deg, #7c3aed, #06b6d4, #22c55e) border-box;
  box-shadow: 0 10px 28px rgba(2, 6, 23, .06);
}

/* Responsive tweak: stack panels on narrow screens */
@media (max-width: 768px) {
  .skill-container {
    flex: 1 1 100%;
  }
}


/* ===== Experience / Skills (Apple Rings) ===== */
#experience {
  position: relative;
}

.skills-lead {
  color: var(--muted);
  margin-top: 6px;
}


/* === One-color Apple-style skill ring (same size + animated) === */
:root {
  --ring-size: 136px;
  /* same diameter for every skill */
  --ring-thickness: 12px;
  /* ring width */
  --ring-track: #e5e7eb;
  /* track (light) */
}

[theme="dark"] {
  --ring-track: #1f2937;
}

/* track in dark mode */

.activity-grid {
  display: grid;
  gap: 22px;
  grid-template-columns: repeat(2, minmax(180px, 1fr));
  margin-top: 18px;
}

@media (min-width:900px) {
  .activity-grid {
    grid-template-columns: repeat(4, minmax(180px, 1fr));
  }
}

.skill-meter {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  text-align: center;
}

/* We animate a typed custom property for smooth interpolation */
@property --progress {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

/* container + label */
.ring {
  position: relative;
  width: 122px;
  height: 122px;
  display: grid;
  place-items: center;
  margin: 12px auto;
  isolation: isolate;
}

.name {
  margin-top: 10px;
  font-size: 14px;
  color: var(--secondary-color-2, #666);
  text-align: center;
}

/* svg */
.progress-ring {
  width: 122px;
  height: 122px;
  transform: rotate(-90deg);
  /* start at 12 o'clock */
}

/* animated stroke */
.progress-ring__circle {
  stroke-dasharray: 0 1;
  /* set by JS after length calc */
  stroke-dashoffset: 0;
  /* set by JS */
}

/* dot at the rim that rotates with progress */
.dot {
  z-index: 2;
  position: absolute;
  inset: 0;
  transform: rotate(0deg);
  /* JS updates */
  transition: transform .2s linear;
  /* just a tiny smoothing */
}

.dot:after {
  content: "";
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: transparent;
  box-shadow: 3px 0 3px rgba(0, 0, 0, .24);
}

/* optional: reduce motion users see final state immediately */
@media (prefers-reduced-motion: reduce) {
  .progress-ring__circle {
    transition: none !important;
  }
}

/* ===== One-color skill ring (same size + animated) ===== */
.skill-ring {
  /* per-item inline: --p (0..100), --ring-color */
  --p: 0;
  --ring-color: #34c759;
  --progress: 0;
  width: var(--ring-size);
  height: var(--ring-size);
  position: relative;
  display: grid;
  place-items: center;
  border-radius: 50%;
}

/* colored arc + hollow center; fill = --p * --progress */
.skill-ring::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: conic-gradient(var(--ring-color) calc((var(--p) * var(--progress, 0)) * 1%), var(--ring-track) 0);
  -webkit-mask:
    radial-gradient(farthest-side, transparent calc(50% - var(--ring-thickness)),
      #000 calc(50% - var(--ring-thickness) + 1px));
  mask:
    radial-gradient(farthest-side, transparent calc(50% - var(--ring-thickness)),
      #000 calc(50% - var(--ring-thickness) + 1px));
}

/* ===== Projects / Cards ===== */
#projects {
  position: relative;
}

.project-grid {
  display: grid;
  gap: 18px;
  grid-template-columns: 1fr;
  margin-top: 18px;
}

@media (min-width:900px) {
  .project-grid {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

.card {
  display: flex;
  flex-direction: column;
  height: 100%;
  text-decoration: none;
  color: inherit;
  overflow: hidden;
  background: var(--card-bg);
  border: 1px solid var(--card-border);
  border-radius: 16px;
  transition: transform .18s ease, box-shadow .18s ease, border-color .18s ease;
}

.card:hover {
  transform: translateY(-4px);
  box-shadow: 0 18px 40px rgba(2, 6, 23, .45);
  border-color: rgba(99, 102, 241, .6);
}

.card img {
  width: 100%;
  height: 180px;
  object-fit: cover;
  background: #0b0d14;
}

.card-body {
  padding: 14px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.card h3 {
  margin: 0;
  font-size: 18px;
}

.card p {
  margin: 0;
  color: var(--muted);
  font-size: 14px;
}

.card .actions {
  display: flex;
  gap: 8px;
  margin-top: auto;
}

.card .btn {
  flex: 1 1 auto;
}

/* SPC special card with gradient border */
.spc-card {
  border: 1.5px solid transparent;
  background:
    linear-gradient(var(--card-bg), var(--card-bg)) padding-box,
    linear-gradient(135deg, #6366f1, #06b6d4, #22c55e) border-box;
}

.spc-card .spc-card-head {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 6px;
}

.spc-card .spc-logo {
  width: 36px;
  height: 36px;
  display: grid;
  place-items: center;
  border-radius: 10px;
  background: linear-gradient(135deg, #6366f1, #06b6d4);
  color: #fff;
  font-weight: 800;
}

.spc-badges {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.spc-badge {
  display: inline-flex;
  padding: 6px 10px;
  border-radius: 999px;
  background: rgba(6, 182, 212, .16);
  border: 1px solid rgba(6, 182, 212, .35);
  font-size: 12px;
  color: var(--ink);
}

/* ===== Contact & Footer ===== */
#contact {
  display: flex;
  justify-content: center;
  flex-direction: column;
  height: 70vh;
}

.contact-info-upper-container {
  display: flex;
  justify-content: center;
  border-radius: 2rem;
  border: var(--button-border);
  border-color: var(--container-border);
  background: var(--background-color);
  margin: 2rem auto;
  padding: 0.5rem;
}

.contact-info-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin: 1rem;
}

.contact-info-container p {
  font-size: larger;
}

.email-icon {
  height: 2.5rem;
}

footer {
  height: 26vh;
  margin: 0 1rem;
}

footer p {
  text-align: center;
}

/* === Apple Activity Rings (matches your HTML) === */
:root {
  --ring-size: 136px;
  /* diameter */
  --ring-thickness: 12px;
  /* ring width */
  --ring-track: #e5e7eb;
  /* light track */
}

[theme="dark"] {
  --ring-track: #1f2937;
}

.activity-grid {
  display: grid;
  gap: 22px;
  grid-template-columns: repeat(2, minmax(180px, 1fr));
  margin-top: 18px;
}

@media (min-width:900px) {
  .activity-grid {
    grid-template-columns: repeat(4, minmax(180px, 1fr));
  }
}

.activity {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  text-align: center;
}

/* JS animates --progress (0 → 1). You set --p and --color inline on the element. */
.activity-ring {
  --p: 0;
  /* percent (0..100), set inline in HTML */
  --color: #34c759;
  /* fallback color if not provided inline */
  --progress: 0;
  /* animated by JS */
  width: var(--ring-size);
  height: var(--ring-size);
  position: relative;
  display: grid;
  place-items: center;
  border-radius: 50%;
}

.activity-ring::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 50%;
  /* Fill angle = --p * --progress */
  background:
    conic-gradient(var(--color) calc((var(--p) * var(--progress)) * 1%),
      var(--ring-track) 0);
  /* Hollow center (donut) */
  -webkit-mask: radial-gradient(farthest-side,
      transparent calc(50% - var(--ring-thickness)),
      #000 calc(50% - var(--ring-thickness) + 1px));
  mask: radial-gradient(farthest-side,
      transparent calc(50% - var(--ring-thickness)),
      #000 calc(50% - var(--ring-thickness) + 1px));
  box-shadow: 0 8px 24px rgba(0, 0, 0, .25) inset;
}

.activity .value {
  position: relative;
  z-index: 1;
  font-weight: 700;
  font-size: 20px;
  color: var(--secondary-color);
}

.activity .name {
  font-size: 14px;
  color: var(--secondary-color-2);
}

@media (max-width:480px) {
  :root {
    --ring-size: 120px;
    --ring-thickness: 10px;
  }
}

/* Skills cards container (two cards side-by-side on wide screens) */
.skills-card-grid {
  display: grid;
  gap: 18px;
  grid-template-columns: 1fr;
  /* mobile: single column */
}

@media (min-width: 1000px) {
  .skills-card-grid {
    grid-template-columns: 1fr 1fr;
  }

  /* desktop: 2 columns */
}

/* Make card content use full width; let the skills grid expand */
.skills-card-grid .card {
  height: 100%;
}

.skills-card-grid .card-body {
  display: flex;
  flex-direction: column;
  gap: 14px;
}

/* The skills/rings area fills the card width with flexible columns */
.activity-grid {
  display: grid;
  gap: 16px;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  align-content: start;
  width: 100%;
}